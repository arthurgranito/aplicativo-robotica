// Generated by view binder compiler. Do not edit!
package com.contatosemergencia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.contatosemergencia.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCadastroContatoBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton btnCancelar;

  @NonNull
  public final MaterialButton btnSalvar;

  @NonNull
  public final TextInputEditText etDescricao;

  @NonNull
  public final TextInputEditText etNome;

  @NonNull
  public final TextInputEditText etTelefone;

  @NonNull
  public final TextInputLayout tilDescricao;

  @NonNull
  public final TextInputLayout tilNome;

  @NonNull
  public final TextInputLayout tilTelefone;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityCadastroContatoBinding(@NonNull LinearLayout rootView,
      @NonNull MaterialButton btnCancelar, @NonNull MaterialButton btnSalvar,
      @NonNull TextInputEditText etDescricao, @NonNull TextInputEditText etNome,
      @NonNull TextInputEditText etTelefone, @NonNull TextInputLayout tilDescricao,
      @NonNull TextInputLayout tilNome, @NonNull TextInputLayout tilTelefone,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.btnCancelar = btnCancelar;
    this.btnSalvar = btnSalvar;
    this.etDescricao = etDescricao;
    this.etNome = etNome;
    this.etTelefone = etTelefone;
    this.tilDescricao = tilDescricao;
    this.tilNome = tilNome;
    this.tilTelefone = tilTelefone;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCadastroContatoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCadastroContatoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_cadastro_contato, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCadastroContatoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCancelar;
      MaterialButton btnCancelar = ViewBindings.findChildViewById(rootView, id);
      if (btnCancelar == null) {
        break missingId;
      }

      id = R.id.btnSalvar;
      MaterialButton btnSalvar = ViewBindings.findChildViewById(rootView, id);
      if (btnSalvar == null) {
        break missingId;
      }

      id = R.id.etDescricao;
      TextInputEditText etDescricao = ViewBindings.findChildViewById(rootView, id);
      if (etDescricao == null) {
        break missingId;
      }

      id = R.id.etNome;
      TextInputEditText etNome = ViewBindings.findChildViewById(rootView, id);
      if (etNome == null) {
        break missingId;
      }

      id = R.id.etTelefone;
      TextInputEditText etTelefone = ViewBindings.findChildViewById(rootView, id);
      if (etTelefone == null) {
        break missingId;
      }

      id = R.id.tilDescricao;
      TextInputLayout tilDescricao = ViewBindings.findChildViewById(rootView, id);
      if (tilDescricao == null) {
        break missingId;
      }

      id = R.id.tilNome;
      TextInputLayout tilNome = ViewBindings.findChildViewById(rootView, id);
      if (tilNome == null) {
        break missingId;
      }

      id = R.id.tilTelefone;
      TextInputLayout tilTelefone = ViewBindings.findChildViewById(rootView, id);
      if (tilTelefone == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityCadastroContatoBinding((LinearLayout) rootView, btnCancelar, btnSalvar,
          etDescricao, etNome, etTelefone, tilDescricao, tilNome, tilTelefone, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
